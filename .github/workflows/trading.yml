name: Crypto Trading Automation

on:
  schedule:
    # Every 5 minutes - Monitoring and auto sell orders
    - cron: '*/5 * * * *'
    # Daily at 23:55 - Cancel pending trigger orders
    - cron: '55 23 * * *'
    # Daily at 00:05 - Create new algo triggers
    - cron: '5 0 * * *'

  # ÊâãÂä®Ëß¶Âèë
  workflow_dispatch:

  # External trigger support (for forks or external schedulers)
  repository_dispatch:
    types: [cron]

jobs:
  trading:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Log execution time
        run: |
          echo "üïê Workflow started at: $(date -u)"
          echo "üïê UTC time: $(date -u +%Y-%m-%d\ %H:%M:%S\ UTC)"
          echo "üïê Cron schedule: ${{ github.event.schedule || 'manual' }}"
          echo "üïê Event type: ${{ github.event_name }}"
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.local/bin/uv
          key: uv-${{ runner.os }}-py311-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            uv-${{ runner.os }}-py311-
            uv-${{ runner.os }}-

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install dependencies
        run: |
          ~/.local/bin/uv pip install --system -r requirements.txt
          
      - name: Run monitoring and protection
        if: (github.event_name == 'schedule' && github.event.schedule == '*/5 * * * *') || github.event_name == 'workflow_dispatch' || (github.event_name == 'repository_dispatch' && github.event.action == 'cron')
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
          OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
          OKX_PASSPHRASE: ${{ secrets.OKX_PASSPHRASE }}
        run: |
          echo "üîÑ Running monitor_delist.py..."
          python monitor_delist.py || echo "‚ö†Ô∏è monitor_delist.py completed with warnings"
          
      - name: Run auto sell orders
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || (github.event_name == 'repository_dispatch' && github.event.action == 'cron')
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
          OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
          OKX_PASSPHRASE: ${{ secrets.OKX_PASSPHRASE }}
        run: |
          echo "üîÑ Running auto_sell_orders.py..."
          python auto_sell_orders.py || echo "‚ö†Ô∏è auto_sell_orders.py completed with warnings"
          
      - name: Run fetch filled orders
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || (github.event_name == 'repository_dispatch' && github.event.action == 'cron')
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
          OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
          OKX_PASSPHRASE: ${{ secrets.OKX_PASSPHRASE }}
        run: |
          echo "üîÑ Running fetch_filled_orders.py..."
          python fetch_filled_orders.py || echo "‚ö†Ô∏è fetch_filled_orders.py completed with warnings"
          
      - name: Run cancel pending limits
        if: (github.event_name == 'schedule' && github.event.schedule == '*/5 * * * *') || github.event_name == 'workflow_dispatch' || (github.event_name == 'repository_dispatch' && github.event.action == 'cron')
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
          OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
          OKX_PASSPHRASE: ${{ secrets.OKX_PASSPHRASE }}
        run: |
          echo "üîÑ Running cancel_pending_limits.py..."
          python cancel_pending_limits.py --side buy || echo "‚ö†Ô∏è cancel_pending_limits.py completed with warnings"
          
      - name: Run cancel pending triggers (nightly)
        if: (github.event_name == 'schedule' && github.event.schedule == '55 23 * * *')
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
          OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
          OKX_PASSPHRASE: ${{ secrets.OKX_PASSPHRASE }}
        run: |
          echo "üîÑ Running cancel_pending_triggers.py..."
          python cancel_pending_triggers.py || echo "‚ö†Ô∏è cancel_pending_triggers.py completed with warnings"
          
      - name: Run create algo triggers (nightly)
        if: (github.event_name == 'schedule' && github.event.schedule == '5 0 * * *')
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
          OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
          OKX_PASSPHRASE: ${{ secrets.OKX_PASSPHRASE }}
        run: |
          echo "üîÑ Running create_algo_triggers.py..."
          python create_algo_triggers.py || echo "‚ö†Ô∏è create_algo_triggers.py completed with warnings"
          
      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trading-logs-${{ github.run_id }}
          path: |
            logs/
            *.log
          retention-days: 7
