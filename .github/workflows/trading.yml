name: Crypto Trading Automation

on:
  schedule:
    # 每5分钟运行监控和自动卖出
    - cron: '*/5 * * * *'
    # 每15分钟获取已成交订单
    - cron: '*/15 * * * *'
    # 每天23:55取消待处理触发订单
    - cron: '55 23 * * *'
    # 每天00:05创建新的触发订单
    - cron: '5 0 * * *'
    # 每5分钟取消待处理限价订单
    - cron: '*/5 * * * *'

  # 手动触发
  workflow_dispatch:

jobs:
  trading:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          
      - name: Run monitoring and protection
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
          OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
          OKX_PASSPHRASE: ${{ secrets.OKX_PASSPHRASE }}
        run: |
          echo "🔄 Running monitor_delist.py..."
          python monitor_delist.py || echo "⚠️ monitor_delist.py completed with warnings"
          
      - name: Run auto sell orders
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
          OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
          OKX_PASSPHRASE: ${{ secrets.OKX_PASSPHRASE }}
        run: |
          echo "🔄 Running auto_sell_orders.py..."
          python auto_sell_orders.py || echo "⚠️ auto_sell_orders.py completed with warnings"
          
      - name: Run fetch filled orders
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
          OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
          OKX_PASSPHRASE: ${{ secrets.OKX_PASSPHRASE }}
        run: |
          echo "🔄 Running fetch_filled_orders.py..."
          python fetch_filled_orders.py || echo "⚠️ fetch_filled_orders.py completed with warnings"
          
      - name: Run cancel pending limits
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
          OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
          OKX_PASSPHRASE: ${{ secrets.OKX_PASSPHRASE }}
        run: |
          echo "🔄 Running cancel_pending_limits.py..."
          python cancel_pending_limits.py --side buy || echo "⚠️ cancel_pending_limits.py completed with warnings"
          
      - name: Run cancel pending triggers (nightly)
        if: (github.event_name == 'schedule' && github.event.schedule == '55 23 * * *') || github.event_name == 'workflow_dispatch'
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
          OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
          OKX_PASSPHRASE: ${{ secrets.OKX_PASSPHRASE }}
        run: |
          echo "🔄 Running cancel_pending_triggers.py..."
          python cancel_pending_triggers.py || echo "⚠️ cancel_pending_triggers.py completed with warnings"
          
      - name: Run create algo triggers (nightly)
        if: (github.event_name == 'schedule' && github.event.schedule == '5 0 * * *') || github.event_name == 'workflow_dispatch'
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
          OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
          OKX_PASSPHRASE: ${{ secrets.OKX_PASSPHRASE }}
        run: |
          echo "🔄 Running create_algo_triggers.py..."
          python create_algo_triggers.py || echo "⚠️ create_algo_triggers.py completed with warnings"
          
      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trading-logs-${{ github.run_id }}
          path: |
            logs/
            *.log
          retention-days: 7
